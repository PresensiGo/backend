definitions:
  CreateAttendanceItemReq:
    properties:
      note:
        type: string
      status:
        $ref: '#/definitions/models.AttendanceStatus'
      student_id:
        type: integer
    type: object
  CreateAttendanceReq:
    properties:
      attendance_students:
        items:
          $ref: '#/definitions/CreateAttendanceItemReq'
        type: array
      classroom_id:
        type: integer
      date:
        type: string
    type: object
  CreateLatenessDetailReq:
    properties:
      student_id:
        type: integer
    required:
    - student_id
    type: object
  CreateLatenessReq:
    properties:
      date:
        type: string
    required:
    - date
    type: object
  GetAllAttendancesRes:
    properties:
      attendances:
        items:
          $ref: '#/definitions/dto.Attendance'
        type: array
    required:
    - attendances
    type: object
  GetAllLatenessesRes:
    properties:
      latenesses:
        items:
          $ref: '#/definitions/dto.Lateness'
        type: array
    required:
    - latenesses
    type: object
  GetAttendanceItemRes:
    properties:
      attendanceStudent:
        $ref: '#/definitions/dto.AttendanceDetail'
      student:
        $ref: '#/definitions/dto.Student'
    required:
    - attendanceStudent
    - student
    type: object
  GetAttendanceRes:
    properties:
      attendance:
        $ref: '#/definitions/dto.Attendance'
      items:
        items:
          $ref: '#/definitions/GetAttendanceItemRes'
        type: array
    required:
    - attendance
    - items
    type: object
  RefreshTokenTTLReq:
    properties:
      refresh_token:
        type: string
    type: object
  dto.Attendance:
    properties:
      classroom_id:
        type: integer
      date:
        type: string
      id:
        type: integer
    required:
    - classroom_id
    - date
    - id
    type: object
  dto.AttendanceDetail:
    properties:
      attendance_id:
        type: integer
      id:
        type: integer
      note:
        type: string
      status:
        $ref: '#/definitions/models.AttendanceStatus'
      student_id:
        type: integer
    required:
    - attendance_id
    - id
    - note
    - status
    - student_id
    type: object
  dto.Batch:
    properties:
      id:
        type: integer
      name:
        type: string
      school_id:
        type: integer
    required:
    - id
    - name
    - school_id
    type: object
  dto.Classroom:
    properties:
      id:
        type: integer
      major_id:
        type: integer
      name:
        type: string
    required:
    - id
    - major_id
    - name
    type: object
  dto.Lateness:
    properties:
      date:
        type: string
      id:
        type: integer
      school_id:
        type: integer
    required:
    - date
    - id
    - school_id
    type: object
  dto.Major:
    properties:
      batch_id:
        type: integer
      id:
        type: integer
      name:
        type: string
    required:
    - batch_id
    - id
    - name
    type: object
  dto.Student:
    properties:
      classroom_id:
        type: integer
      id:
        type: integer
      name:
        type: string
      nis:
        type: string
    required:
    - classroom_id
    - id
    - name
    - nis
    type: object
  models.AttendanceStatus:
    enum:
    - hadir
    - izin
    - sakit
    - alpha
    type: string
    x-enum-varnames:
    - AttendancePresent
    - AttendancePermission
    - AttendanceSick
    - AttendanceAlpha
  requests.Login:
    properties:
      email:
        default: email@email.com
        type: string
      password:
        type: string
    type: object
  requests.Logout:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  requests.RefreshToken:
    properties:
      refresh_token:
        type: string
    type: object
  requests.Register:
    properties:
      code:
        type: string
      email:
        default: email@email.com
        type: string
      name:
        default: John Doe
        type: string
      password:
        default: password
        type: string
    type: object
  responses.ClassroomMajor:
    properties:
      classroom:
        $ref: '#/definitions/dto.Classroom'
      major:
        $ref: '#/definitions/dto.Major'
    required:
    - classroom
    - major
    type: object
  responses.GetAllBatches:
    properties:
      batches:
        items:
          $ref: '#/definitions/dto.Batch'
        type: array
    required:
    - batches
    type: object
  responses.GetAllClassroomWithMajors:
    properties:
      data:
        items:
          $ref: '#/definitions/responses.ClassroomMajor'
        type: array
    required:
    - data
    type: object
  responses.GetAllMajors:
    properties:
      majors:
        items:
          $ref: '#/definitions/dto.Major'
        type: array
    required:
    - majors
    type: object
  responses.GetAllStudents:
    properties:
      students:
        items:
          $ref: '#/definitions/dto.Student'
        type: array
    required:
    - students
    type: object
  responses.Login:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    required:
    - access_token
    - refresh_token
    type: object
  responses.Logout:
    type: object
  responses.RefreshToken:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    required:
    - access_token
    - refresh_token
    type: object
  responses.Register:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    required:
    - access_token
    - refresh_token
    type: object
info:
  contact: {}
  title: PresensiGo API
  version: "1.0"
paths:
  /api/v1/attendances:
    post:
      operationId: createAttendance
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CreateAttendanceReq'
      responses:
        "200":
          description: OK
          schema:
            type: string
      tags:
      - attendance
  /api/v1/attendances/{attendance_id}:
    delete:
      operationId: deleteAttendance
      parameters:
      - description: Attendance Id
        in: path
        name: attendance_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
      tags:
      - attendance
    get:
      operationId: getAttendance
      parameters:
      - description: Attendance Id
        in: path
        name: attendance_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetAttendanceRes'
      tags:
      - attendance
  /api/v1/attendances/classrooms/{classroom_id}:
    get:
      operationId: getAllAttendances
      parameters:
      - description: Classroom Id
        in: path
        name: classroom_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetAllAttendancesRes'
      tags:
      - attendance
  /api/v1/auth/login:
    post:
      operationId: login
      parameters:
      - description: Login request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.Login'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Login'
      tags:
      - auth
  /api/v1/auth/logout:
    post:
      operationId: logout
      parameters:
      - description: Logout Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.Logout'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Logout'
      tags:
      - auth
  /api/v1/auth/refresh-token:
    post:
      operationId: refreshToken
      parameters:
      - description: Refresh token req
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.RefreshToken'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.RefreshToken'
      tags:
      - auth
  /api/v1/auth/refresh-token-ttl:
    post:
      operationId: refreshTokenTTL
      parameters:
      - description: Refresh token req
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/RefreshTokenTTLReq'
      responses:
        "200":
          description: OK
          schema:
            type: string
      tags:
      - auth
  /api/v1/auth/register:
    post:
      operationId: register
      parameters:
      - description: Login request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.Register'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Register'
      tags:
      - auth
  /api/v1/batch:
    get:
      operationId: getAllBatches
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.GetAllBatches'
      tags:
      - batch
  /api/v1/classrooms/batches/{batch_id}:
    get:
      operationId: getAllClassroomWithMajors
      parameters:
      - description: Batch Id
        in: path
        name: batch_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.GetAllClassroomWithMajors'
      tags:
      - classroom
  /api/v1/excel/import:
    post:
      operationId: importData
      responses:
        "200":
          description: OK
          schema:
            type: string
      tags:
      - excel
  /api/v1/latenesses:
    get:
      operationId: getAllLatenesses
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetAllLatenessesRes'
      tags:
      - lateness
    post:
      operationId: createLateness
      parameters:
      - description: Payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CreateLatenessReq'
      responses:
        "200":
          description: OK
          schema:
            type: string
      tags:
      - lateness
  /api/v1/latenesses/{lateness_id}:
    post:
      operationId: createLatenessDetail
      parameters:
      - description: Payload
        in: path
        name: lateness_id
        required: true
        type: integer
      - description: Payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CreateLatenessDetailReq'
      responses:
        "200":
          description: OK
          schema:
            type: string
      tags:
      - lateness
  /api/v1/majors/batch/{batch_id}:
    get:
      operationId: getAllMajors
      parameters:
      - description: Batch Id
        in: path
        name: batch_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.GetAllMajors'
      tags:
      - major
  /api/v1/reset:
    get:
      operationId: reset
      responses:
        "200":
          description: OK
          schema:
            type: string
      tags:
      - reset
  /api/v1/students/classrooms/{classroom_id}:
    get:
      operationId: getAllStudents
      parameters:
      - description: Classroom Id
        in: path
        name: classroom_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.GetAllStudents'
      tags:
      - student
swagger: "2.0"
