definitions:
  dto.Attendance:
    properties:
      class_id:
        type: integer
      date:
        type: string
      id:
        type: integer
    required:
    - class_id
    - date
    - id
    type: object
  dto.Batch:
    properties:
      id:
        type: integer
      name:
        type: string
    required:
    - id
    - name
    type: object
  dto.Class:
    properties:
      id:
        type: integer
      major_id:
        type: integer
      name:
        type: string
    required:
    - id
    - major_id
    - name
    type: object
  dto.Major:
    properties:
      id:
        type: integer
      name:
        type: string
    required:
    - id
    - name
    type: object
  dto.Student:
    properties:
      class_id:
        type: integer
      id:
        type: integer
      name:
        type: string
      nis:
        type: string
    required:
    - class_id
    - id
    - name
    - nis
    type: object
  dto.Token:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    required:
    - access_token
    - refresh_token
    type: object
  models.AttendanceStatus:
    enum:
    - hadir
    - izin
    - sakit
    - alpha
    type: string
    x-enum-varnames:
    - AttendancePresent
    - AttendancePermission
    - AttendanceSick
    - AttendanceAlpha
  requests.CreateAttendance:
    properties:
      attendance_students:
        items:
          properties:
            note:
              type: string
            status:
              $ref: '#/definitions/models.AttendanceStatus'
            student_id:
              type: integer
          type: object
        type: array
      class_id:
        type: integer
      date:
        type: string
    type: object
  requests.Login:
    properties:
      email:
        default: email@email.com
        type: string
      password:
        type: string
    type: object
  requests.RefreshToken:
    properties:
      refresh_token:
        type: string
    type: object
  requests.Register:
    properties:
      email:
        default: email@email.com
        type: string
      name:
        default: John Doe
        type: string
      password:
        default: password
        type: string
    type: object
  responses.ClassMajor:
    properties:
      class:
        $ref: '#/definitions/dto.Class'
      major:
        $ref: '#/definitions/dto.Major'
    required:
    - class
    - major
    type: object
  responses.GetAllAttendances:
    properties:
      attendances:
        items:
          $ref: '#/definitions/dto.Attendance'
        type: array
    type: object
  responses.GetAllBatches:
    properties:
      batches:
        items:
          $ref: '#/definitions/dto.Batch'
        type: array
    required:
    - batches
    type: object
  responses.GetAllClassMajors:
    properties:
      data:
        items:
          $ref: '#/definitions/responses.ClassMajor'
        type: array
    required:
    - data
    type: object
  responses.GetAllClasses:
    properties:
      classes:
        items:
          $ref: '#/definitions/dto.Class'
        type: array
    required:
    - classes
    type: object
  responses.GetAllMajors:
    properties:
      majors:
        items:
          $ref: '#/definitions/dto.Major'
        type: array
    required:
    - majors
    type: object
  responses.GetAllStudents:
    properties:
      students:
        items:
          $ref: '#/definitions/dto.Student'
        type: array
    required:
    - students
    type: object
  responses.Login:
    properties:
      token:
        $ref: '#/definitions/dto.Token'
    required:
    - token
    type: object
  responses.Logout:
    type: object
  responses.RefreshToken:
    properties:
      token:
        $ref: '#/definitions/dto.Token'
    required:
    - token
    type: object
  responses.Register:
    properties:
      token:
        $ref: '#/definitions/dto.Token'
    required:
    - token
    type: object
info:
  contact: {}
  title: PresensiGo API
  version: "1.0"
paths:
  /api/v1/attendances:
    post:
      operationId: createAttendance
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.CreateAttendance'
      responses:
        "200":
          description: OK
          schema:
            type: string
      tags:
      - attendance
  /api/v1/attendances/class/{class_id}:
    get:
      operationId: getAllAttendances
      parameters:
      - description: Class ID
        in: path
        name: class_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.GetAllAttendances'
      tags:
      - attendance
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      operationId: login
      parameters:
      - description: Login request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Login'
      tags:
      - auth
  /api/v1/auth/logout:
    get:
      operationId: logout
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Logout'
      tags:
      - auth
  /api/v1/auth/refresh-token:
    post:
      operationId: refreshToken
      parameters:
      - description: Refresh token req
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.RefreshToken'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.RefreshToken'
      tags:
      - auth
  /api/v1/auth/register:
    post:
      operationId: register
      parameters:
      - description: Login request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/requests.Register'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Register'
      tags:
      - auth
  /api/v1/batch:
    get:
      operationId: getAllBatches
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.GetAllBatches'
      tags:
      - batch
  /api/v1/class:
    get:
      operationId: getAllClasses
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.GetAllClasses'
      tags:
      - class
  /api/v1/class_majors/batch/{batch_id}:
    get:
      operationId: getAllClassMajors
      parameters:
      - description: Batch ID
        in: path
        name: batch_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.GetAllClassMajors'
      tags:
      - classMajor
  /api/v1/excel/import:
    post:
      operationId: importData
      responses:
        "200":
          description: OK
          schema:
            type: string
      tags:
      - excel
  /api/v1/majors/batch/{batch_id}:
    get:
      operationId: getAllMajors
      parameters:
      - description: Batch ID
        in: path
        name: batch_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.GetAllMajors'
      tags:
      - major
  /api/v1/students/class/{class_id}:
    get:
      operationId: getAllStudents
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.GetAllStudents'
      tags:
      - student
swagger: "2.0"
