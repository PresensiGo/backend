// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injectors

import (
	"api/internal/handlers"
	"api/internal/repository"
	"api/internal/services"
	"api/pkg/database"
)

// Injectors from wire.go:

func InitAttendanceHandler() *handlers.Attendance {
	db := database.New()
	attendance := repository.NewAttendance(db)
	attendanceStudent := repository.NewAttendanceStudent()
	servicesAttendance := services.NewAttendance(db, attendance, attendanceStudent)
	handlersAttendance := handlers.NewAttendance(servicesAttendance)
	return handlersAttendance
}

func InitAuthHandler() *handlers.Auth {
	db := database.New()
	user := repository.NewUser(db)
	userToken := repository.NewUserToken(db)
	auth := services.NewAuth(user, userToken, db)
	handlersAuth := handlers.NewAuth(auth)
	return handlersAuth
}

func InitBatchHandler() *handlers.Batch {
	db := database.New()
	batch := services.NewBatch(db)
	handlersBatch := handlers.NewBatch(batch)
	return handlersBatch
}

func InitClassroomHandler() *handlers.Classroom {
	db := database.New()
	classroom := repository.NewClassroom(db)
	major := repository.NewMajor(db)
	servicesClassroom := services.NewClassroom(classroom, major)
	handlersClassroom := handlers.NewClassroom(servicesClassroom)
	return handlersClassroom
}

func InitExcelHandler() *handlers.Excel {
	db := database.New()
	excel := services.NewExcel(db)
	handlersExcel := handlers.NewExcel(excel)
	return handlersExcel
}

func InitMajorHandler() *handlers.Major {
	db := database.New()
	major := services.NewMajor(db)
	handlersMajor := handlers.NewMajor(major)
	return handlersMajor
}

func InitResetService() *services.Reset {
	db := database.New()
	reset := services.NewReset(db)
	return reset
}

func InitStudentHandler() *handlers.Student {
	db := database.New()
	student := repository.NewStudent(db)
	servicesStudent := services.NewStudent(student)
	handlersStudent := handlers.NewStudent(servicesStudent)
	return handlersStudent
}
