// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injectors

import (
	"api/internal/handlers"
	"api/internal/repository"
	"api/internal/services"
	"api/pkg/database"
)

// Injectors from handlers.go:

func InitAuthHandler() *handlers.Auth {
	db := database.New()
	auth := services.NewAuth(db)
	handlersAuth := handlers.NewAuth(auth)
	return handlersAuth
}

func InitBatchHandler() *handlers.Batch {
	db := database.New()
	batch := services.NewBatch(db)
	handlersBatch := handlers.NewBatch(batch)
	return handlersBatch
}

func InitClassHandler() *handlers.Class {
	db := database.New()
	class := services.NewClass(db)
	handlersClass := handlers.NewClass(class)
	return handlersClass
}

func InitClassMajorHandler() *handlers.ClassMajor {
	db := database.New()
	class := repository.NewClass(db)
	major := repository.NewMajor(db)
	classMajor := services.NewClassMajor(class, major)
	handlersClassMajor := handlers.NewClassMajor(classMajor)
	return handlersClassMajor
}

func InitExcelHandler() *handlers.Excel {
	db := database.New()
	excel := services.NewExcel(db)
	handlersExcel := handlers.NewExcel(excel)
	return handlersExcel
}

func InitMajorHandler() *handlers.Major {
	db := database.New()
	major := services.NewMajor(db)
	handlersMajor := handlers.NewMajor(major)
	return handlersMajor
}

func InitResetService() *services.Reset {
	db := database.New()
	reset := services.NewReset(db)
	return reset
}

func InitStudentHandler() *handlers.Student {
	db := database.New()
	student := services.NewStudent(db)
	handlersStudent := handlers.NewStudent(student)
	return handlersStudent
}
